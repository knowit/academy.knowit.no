{"version":3,"sources":["webpack://academy.knowit.no/./src/templates/programsTemplate.js"],"names":["data","markdownRemark","frontmatter","html","showInfoHeader","path","match","InfoHeader","BlogHeader","console","log","Helmet","title","name","content","description","property","className","mycss","dangerouslySetInnerHTML","__html"],"mappings":"6OAYA,IA8BA,EA9BiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACVC,EAAmBD,EAAnBC,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KAEfC,EAAiB,WACrB,OAAIF,EAAYG,KAAKC,MAAM,aAClB,gBAACC,EAAA,EAAD,CAAYP,KAAMC,IAElB,gBAACO,EAAA,EAAD,CAAYR,KAAMC,KAK7B,OADAQ,QAAQC,IAAI,2BAA4BR,EAAYG,KAAMD,GAExD,gBAAC,IAAD,CAAQJ,KAAMA,GACZ,gBAACW,EAAA,EAAD,KACE,6BAAQT,EAAYU,OACpB,wBAAMC,KAAK,cAAcC,QAASZ,EAAYa,cAC9C,wBAAMC,SAAS,WAAWF,QAASZ,EAAYU,QAC/C,wBAAMI,SAAS,iBAAiBF,QAASZ,EAAYa,eAEvD,+BACE,uBAAKE,UAAWC,mBACbd,IACD,uBAAKe,wBAAyB,CAAEC,OAAQjB","file":"component---src-templates-programs-template-js-c82fe336c1a86f615213.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/FrontLayout\"\nimport InfoHeader from \"../components/InfoHeader\"\nimport BlogHeader from \"../components/BlogHeader\"\nimport { Helmet } from \"react-helmet\"\nimport mycss from \"../styles/programTemplate.module.scss\"\n\n// export default function Template({\n//   data, // this prop will be injected by the GraphQL query below.\n// }) {\n\nconst Template = ({ data }) => {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n\n  const showInfoHeader = () => {\n    if (frontmatter.path.match(/\\/courses/)) {\n      return <InfoHeader data={markdownRemark} />\n    } else {\n      return <BlogHeader data={markdownRemark} />\n    }\n  }\n\n  console.log(\"should show info header:\", frontmatter.path, showInfoHeader)\n  return (\n    <Layout data={data}>\n      <Helmet>\n        <title>{frontmatter.title}</title>\n        <meta name=\"description\" content={frontmatter.description} />\n        <meta property=\"og:title\" content={frontmatter.title} />\n        <meta property=\"og:description\" content={frontmatter.description} />\n      </Helmet>\n      <section>\n        <div className={mycss.content}>\n          {showInfoHeader()}\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n      </section>\n    </Layout>\n  )\n}\nexport default Template\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date\n        location\n        endDate\n        path\n        title\n        description\n        image\n        updated\n        email\n        author\n        teacher\n        confirmed\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        ogImage\n      }\n    }\n  }\n`\n"],"sourceRoot":""}