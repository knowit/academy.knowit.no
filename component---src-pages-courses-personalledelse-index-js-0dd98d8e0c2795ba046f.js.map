{"version":3,"file":"component---src-pages-courses-personalledelse-index-js-0dd98d8e0c2795ba046f.js","mappings":"2NAmBA,EAfwB,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAClC,OACEC,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAACE,EAAAA,EAAD,CAAYC,QAAQ,MAAMJ,GACzBD,EAAQM,KAAI,SAACC,GAAD,OACXL,EAAAA,cAACM,EAAAA,EAAD,CACEC,KAAMF,EAAEG,KACRC,IAAKJ,EAAEG,KAAKE,YAAYC,KACxBC,iBAAiB,GAJpB,IAJP,E,kBCyEA,EApEoB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACrBP,GCROQ,EAAAA,EAAAA,gBAAe,aDStBC,EAAU,IAAIC,OAAJ,WAEI,IAATJ,EAAuB,GAAK,GAAGK,OAAOL,EAAM,MAFvC,iBAGGC,GAGbK,EAAW,IAAIF,OAAJ,aAAwBH,GAEzCM,QAAQC,IAAI,WAAYL,GACxBI,QAAQC,IAAI,YAAaF,GAEzB,IAAMG,EAAQf,EAAKgB,kBAAkBC,MAAMC,MAAK,SAACpB,GAAD,OAC9CA,EAAEG,KAAKE,YAAYC,KAAKe,MAAMV,EADlB,IAEZR,KAEFY,QAAQC,IAAIC,GAEZ,IAeMxB,EAAUS,EAAKgB,kBAAkBC,MACpCG,QAAO,SAACtB,GAAD,OAAQA,EAAEG,KAAKoB,iBAAiBF,MAAM,gBADhC,IAEbC,QAAO,SAACtB,GAAD,OAAOA,EAAEG,KAAKE,YAAYC,KAAKe,MAAMP,EAF/B,IAGbf,KAAI,SAACC,GAEJ,OADAA,EAAEG,KAAKE,YAAYmB,KAnBK,SAACC,GAC3B,QAA0B,IAAfA,EAAMD,KAAsB,OAAO,KAC9C,GAAIC,EAAMD,gBAAgBE,KAAM,OAAOD,EAAMD,KAC7C,GAA0B,iBAAfC,EAAMD,KAAmB,OAAO,KAE3C,GAA0B,KAAtBC,EAAMD,KAAKG,OAAe,OAAO,IAAID,KAAKD,EAAMD,MACpD,GAA0B,KAAtBC,EAAMD,KAAKG,OACb,OAAO,IAAID,KAAKD,EAAMD,KAAKI,MAAM,UAAUC,KAAK,MAElD,MAAM,IAAIC,UACR,sFAVJ,CAmB8BC,CAAoB/B,EAAEG,KAAKE,aAC9CL,CALK,IAObgC,MAAK,SAACC,EAAGC,GACR,OAAgC,OAA5BD,EAAE9B,KAAKE,YAAYmB,KAAsB,EACb,OAA5BU,EAAE/B,KAAKE,YAAYmB,MAAuB,EACvCS,EAAE9B,KAAKE,YAAYmB,KAAOU,EAAE/B,KAAKE,YAAYmB,KAAO,GAAK,CAVpD,IAgBhB,OAHAP,EAAMZ,YAAY8B,QAAlBlB,qCAAiER,EAAjE,IACAQ,EAAMZ,YAAYC,KAAlBW,YAAqCR,EAGnCd,EAAAA,cAACyC,EAAAA,EAAD,KACEzC,EAAAA,cAAC0C,EAAAA,EAAD,CAAWC,SAAS,UAClB3C,EAAAA,cAACC,EAAAA,EAAD,CAAK2C,WAAY,GACf5C,EAAAA,cAAC6C,EAAAA,EAAD,CAAYtC,KAAMe,IAClBtB,EAAAA,cAACE,EAAAA,EAAD,CACEC,QAAQ,QACR2C,wBAAyB,CAAEC,OAAQzB,EAAM0B,SAG7ChD,EAAAA,cAACC,EAAAA,EAAD,CAAKgD,cAAe,GAClBjD,EAAAA,cAACkD,EAAD,CAAiBpD,QAASA,EAASC,MAAM,mBA7DnD,C,sDEDA,UAJ+B,WAC7B,OAAOC,EAAAA,cAACmD,EAAAA,EAAD,CAAarC,QAAQ,mBAD9B,C","sources":["webpack://academy.knowit.no/./src/components/ProgramOverview/program-overview.js","webpack://academy.knowit.no/./src/components/ProgramPage/program-page.js","webpack://academy.knowit.no/./src/hooks/useFetchAllPages.js","webpack://academy.knowit.no/./src/pages/courses/personalledelse/index.js"],"sourcesContent":["import React from 'react'\nimport InfoHeader from 'components/InfoHeader'\nimport { Box, Typography } from '@mui/material'\n\nconst ProgramOverview = ({ courses, title }) => {\n  return (\n    <Box>\n      <Typography variant=\"h3\">{title}</Typography>\n      {courses.map((i) => (\n        <InfoHeader\n          data={i.node}\n          key={i.node.frontmatter.path}\n          showDescription={true}\n        />\n      ))}\n    </Box>\n  )\n}\n\nexport default ProgramOverview\n","import * as React from 'react'\n// import * as css from './program-page.module.scss'\nimport Layout from 'components/FrontLayout'\nimport BlogHeader from 'components/BlogHeader'\n// import SignupSection from 'components/SignupSection'\nimport ProgramOverview from 'components/ProgramOverview'\nimport { useFetchAllPages } from 'hooks/useFetchAllPages'\nimport { Box, Container, Typography } from '@mui/material'\n\nconst ProgramPage = ({ year, program }) => {\n  const data = useFetchAllPages()\n  const aboutRe = new RegExp(\n    `^/${\n      typeof year === 'undefined' ? '' : ''.concat(year, '/')\n    }courses/about-${program}`\n  )\n\n  const courseRe = new RegExp(`^/courses/${program}`)\n\n  console.log('aboutre:', aboutRe)\n  console.log('courseRe:', courseRe)\n\n  const about = data.allMarkdownRemark.edges.find((i) =>\n    i.node.frontmatter.path.match(aboutRe)\n  ).node\n\n  console.log(about)\n  // parses the date from frontmatter and tries to correct the most common mistakes\n  const makeFrontmatterDate = (front) => {\n    if (typeof front.date === 'undefined') return null\n    if (front.date instanceof Date) return front.date\n    if (typeof front.date !== 'string') return null\n\n    if (front.date.length === 10) return new Date(front.date)\n    if (front.date.length === 16)\n      return new Date(front.date.split(/[T\\s]/i).join('T'))\n\n    throw new TypeError(\n      'date field in frontmatter was wrong datestring format. Needs to be YYYY-MM-DDTHH:mm'\n    )\n  }\n\n  // create a list of all courses for program sorted by date\n  const courses = data.allMarkdownRemark.edges\n    .filter((i) => !i.node.fileAbsolutePath.match(/pages\\/20\\d\\d/))\n    .filter((i) => i.node.frontmatter.path.match(courseRe))\n    .map((i) => {\n      i.node.frontmatter.date = makeFrontmatterDate(i.node.frontmatter)\n      return i\n    })\n    .sort((a, b) => {\n      if (a.node.frontmatter.date === null) return 1\n      if (b.node.frontmatter.date === null) return -1\n      return a.node.frontmatter.date > b.node.frontmatter.date ? 1 : -1\n    })\n\n  about.frontmatter.siteUrl = `https://academy.knowit.no/courses/${program}/`\n  about.frontmatter.path = `/courses/${program}`\n\n  return (\n    <Layout>\n      <Container maxWidth=\"tablet\">\n        <Box paddingTop={4}>\n          <BlogHeader data={about} />\n          <Typography\n            variant=\"body1\"\n            dangerouslySetInnerHTML={{ __html: about.html }}\n          ></Typography>\n        </Box>\n        <Box paddingBottom={8}>\n          <ProgramOverview courses={courses} title=\"Kursoversikt\" />\n        </Box>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default ProgramPage\n","import { useStaticQuery, graphql } from 'gatsby'\nexport const useFetchAllPages = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            email\n            siteUrl\n            description\n            ogImage\n          }\n        }\n        allMarkdownRemark {\n          edges {\n            node {\n              fileAbsolutePath\n              html\n              frontmatter {\n                title\n                path\n                date\n                endDate\n                description\n                image\n                teacher\n                updated\n                confirmed\n                author\n                email\n                location\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  return data\n}\n","import React from 'react'\n\nimport ProgramPage from 'components/ProgramPage'\n\nconst PersonalledelseProgram = () => {\n  return <ProgramPage program=\"personalledelse\" />\n}\n\nexport default PersonalledelseProgram\n"],"names":["courses","title","React","Box","Typography","variant","map","i","InfoHeader","data","node","key","frontmatter","path","showDescription","year","program","useStaticQuery","aboutRe","RegExp","concat","courseRe","console","log","about","allMarkdownRemark","edges","find","match","filter","fileAbsolutePath","date","front","Date","length","split","join","TypeError","makeFrontmatterDate","sort","a","b","siteUrl","Layout","Container","maxWidth","paddingTop","BlogHeader","dangerouslySetInnerHTML","__html","html","paddingBottom","ProgramOverview","ProgramPage"],"sourceRoot":""}