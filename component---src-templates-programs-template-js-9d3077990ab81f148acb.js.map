{"version":3,"sources":["webpack:///./src/components/BlogHeader/BlogHeader.js","webpack:///./src/templates/programsTemplate.js","webpack:///./src/utils/colors.js","webpack:///./src/components/MainHelmet.js","webpack:///./src/components/AcademyLogo/AcademyLogo.js","webpack:///./src/components/AcademyFrontHeader/AcademyFrontHeader.js","webpack:///./src/components/Version/Version.js","webpack:///./src/components/AcademyFooter.js","webpack:///./src/components/FrontLayout.js","webpack:///./src/components/Icon/Icon.js","webpack:///./src/components/InfoHeader/InfoHeader.js"],"names":["BlogHeader","_ref","_data$frontmatter","data","frontmatter","title","author","email","updated","date","moment","format","react_default","a","createElement","Fragment","className","css","blogHeader","Icon","name","byline","href","Template","markdownRemark","html","showInfoHeader","path","match","InfoHeader","components_BlogHeader_BlogHeader","console","log","FrontLayout","Helmet_default","content","description","property","dangerouslySetInnerHTML","__html","pageQuery","colors","knowit","green","purple","blue","yellow","red","gray","MainHelmet","metadata","siteUrl","ogImage","rel","lang","AcademyLogo","render","logoWrapper","logoStyle","alt","src","Component","AcademyFrontHeader","academyFrontHeader","components_AcademyLogo_AcademyLogo","academyHeaderMenu","Version","version","Wrapper","styled","div","withConfig","displayName","componentId","Footer","footer","AcademyFooter","components_Version_Version","FrontPage","children","components_MainHelmet","components_AcademyFrontHeader_AcademyFrontHeader","components_AcademyFooter","style","react__WEBPACK_IMPORTED_MODULE_1___default","iconStyle","Dates","startDate","endDate","confirmed","color","react__WEBPACK_IMPORTED_MODULE_2___default","_Icon__WEBPACK_IMPORTED_MODULE_3__","labels","from","to","isValid","string","dateString","Teacher","_ref2","Byline","_ref3","Updated","_ref4","Picture","_ref5","url","pictureWrapper","backgroundImage","backgroundClip","backgroundPosition","backgroundSize","backgroundRepeat","_ref6","dates","teacher","picture","image","infoHeader","infoBox"],"mappings":"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","file":"component---src-templates-programs-template-js-9d3077990ab81f148acb.js","sourcesContent":["import React from \"react\"\nimport Icon from \"../Icon\"\nimport moment from \"moment\"\nimport css from \"./BlogHeader.module.scss\"\n\nconst BlogHeader = ({ data }) => {\n  const { title, author, email, updated } = data.frontmatter\n  const date = moment(updated).format(\"LL\")\n  return (\n    <>\n      <h1>{title}</h1>\n      <div className={css.blogHeader}>\n        <Icon name=\"access_time\" />\n        <span className={css.byline}>\n          Oppdatert {date} av <a href={`mailto:${email}`}>{author}</a>\n        </span>\n      </div>\n    </>\n  )\n}\n\nexport default BlogHeader\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/FrontLayout\"\nimport InfoHeader from \"../components/InfoHeader\"\nimport BlogHeader from \"../components/BlogHeader\"\nimport Helmet from \"react-helmet\"\nimport css from \"../styles/programTemplate.module.scss\"\n\n// export default function Template({\n//   data, // this prop will be injected by the GraphQL query below.\n// }) {\n\nconst Template = ({ data }) => {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n\n  const showInfoHeader = () => {\n    if (frontmatter.path.match(/\\/courses/)) {\n      return <InfoHeader data={markdownRemark} />\n    } else {\n      return <BlogHeader data={markdownRemark} />\n    }\n  }\n  console.log(\"should show info header:\", frontmatter.path, showInfoHeader)\n  return (\n    <Layout data={data}>\n      <Helmet>\n        <title>{frontmatter.title}</title>\n        <meta name=\"description\" content={frontmatter.description} />\n        <meta property=\"og:title\" content={frontmatter.title} />\n        <meta property=\"og:description\" content={frontmatter.description} />\n      </Helmet>\n      <section>\n        <div className={css.content}>\n          {showInfoHeader()}\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n      </section>\n    </Layout>\n  )\n}\nexport default Template\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date\n        endDate\n        path\n        title\n        description\n        image\n        updated\n        email\n        author\n        teacher\n        confirmed\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        ogImage\n      }\n    }\n  }\n`\n","//\n// Different colors variables to use in css\n//\n\nconst colors = {\n  knowit: {\n    green: [\n      \"rgb(0, 89, 79)\",\n      \"rgb(0, 150, 130)\",\n      \"rgb(160, 209, 202)\",\n      \"rgb(201, 226, 224)\",\n    ],\n    purple: [\n      \"rgb(97, 75, 121)\",\n      \"rgb(142, 127, 174)\",\n      \"rgb(182, 184, 220)\",\n      \"rgb(222, 225, 236)\",\n    ],\n    blue: [\n      \"rgb(40, 51, 74)\",\n      \"rgb(87, 114, 139)\",\n      \"rgb(158, 181, 203)\",\n      \"rgb(214, 225, 236)\",\n    ],\n    yellow: [\n      \"rgb(207, 176, 35)\",\n      \"rgb(249, 226, 103)\",\n      \"rgb(242, 240, 161)\",\n      \"rgb(238, 238, 200)\",\n    ],\n    red: [\n      \"rgb(194, 110, 96)\",\n      \"rgb(234, 167, 148)\",\n      \"rgb(236, 195, 178)\",\n      \"rgb(243, 233, 226)\",\n    ],\n    gray: [\n      \"rgb(117, 120, 123)\",\n      \"rgb(177, 179, 179)\",\n      \"rgb(208, 208, 206)\",\n      \"rgb(228, 226, 219)\",\n    ],\n  },\n}\n\nexport default colors\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\n\nconst MainHelmet = ({ metadata }) => (\n  <Helmet>\n    <title>{metadata.title}</title>\n    <meta name=\"description\" content={metadata.description} />\n    <meta\n      name=\"keywords\"\n      content=\"Knowit, Knowit Academy, Knowit Academy Norway, Recruitment, Personal Development, Career Path\"\n    />\n    <meta property=\"og:title\" content={metadata.title} />\n    <meta property=\"og:description\" content={metadata.description} />\n    <meta property=\"og:url\" content={metadata.siteUrl} />\n    <meta property=\"og:image\" content={metadata.ogImage} />\n    <link rel=\"canonical\" href=\"https://academy.knowit.no/\" />\n    <html lang=\"nb\" />\n  </Helmet>\n)\n\nexport default MainHelmet\n","import React, { Component } from \"react\"\nimport css from \"./AcademyLogo.module.scss\"\n\nclass AcademyLogo extends Component {\n  render() {\n    return (\n      <a className={css.logoWrapper} href=\"/\">\n        <img\n          className={css.logoStyle}\n          alt=\"Knowit Academy Logo\"\n          src=\"/assets/knowit_academy_logo.png\"\n        />\n      </a>\n    )\n  }\n}\n\nexport default AcademyLogo\n","import React from \"react\"\nimport AcademyLogo from \"../AcademyLogo\"\nimport css from \"./AcademyFrontHeader.module.scss\"\n\nconst AcademyFrontHeader = () => {\n  return (\n    <header className={css.academyFrontHeader}>\n      <AcademyLogo />\n      <nav className={css.academyHeaderMenu}>\n        <ul>\n          <li>\n            <a href=\"/#about\">Om Knowit Academy</a>\n          </li>\n          <li>\n            <a href=\"/#theprograms\">Programmene</a>\n          </li>\n          <li>\n            <a href=\"/how-to-apply\">Påmelding</a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default AcademyFrontHeader\n","import React from \"react\"\nimport { version } from \"../../../package\"\nimport css from \"./Version.module.scss\"\n\nconst Version = () => (\n  <>\n    {\" \"}\n    <span className={css.version}>v{version}</span>\n  </>\n)\n\nexport default Version\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport colors from \"../utils/colors.js\"\nimport Version from \"./Version/Version\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  width: 100%;\n  padding: 0;\n  margin: 0 auto;\n  background-color: ${colors.knowit.green[3]};\n  border-top: 1px solid ${colors.knowit.green[1]};\n`\nconst Footer = styled.footer`\n  display: flex;\n  padding: 12px 1.4rem;\n  align-items: center;\n  max-width: 960px;\n  width: 960px;\n\n  & > *:not(:first-child) {\n    margin-left: 0.8rem;\n  }\n\n  div {\n    display: inline-block;\n    font-size: calc(0.2em + 0.6em);\n    font-weight: 200;\n    color: black;\n  }\n\n  img {\n    width: auto;\n    height: 56px;\n  }\n\n  a {\n    color: ${colors.knowit.green[0]};\n    font-weight: 600;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst AcademyFooter = () => {\n  return (\n    <Wrapper>\n      <Footer>\n        <a href=\"/\">\n          <img\n            src=\"/assets/knowit_academy_box_logo.png\"\n            alt=\"Knowit Academy Logo\"\n          />\n        </a>\n        <div>\n          Har du spørsmål om Knowit Academy? Send en epost til{\" \"}\n          <a href=\"mailto:academy@knowit.no\">academy@knowit.no</a> så svarer vi\n          så snart vi rekker.\n          <Version />\n        </div>\n      </Footer>\n    </Wrapper>\n  )\n}\n\nexport default AcademyFooter\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport MainHelmet from \"./MainHelmet\"\nimport AcademyFrontHeader from \"../components/AcademyFrontHeader\"\nimport AcademyFooter from \"../components/AcademyFooter\"\n\nconst FrontPage = styled.div`\n  height: 100%;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  margin: auto;\n\n  main {\n    flex-grow: 1;\n    display: flex;\n    // height: 100%;\n    justify-content: flex-start;\n    flex-direction: column;\n    margin: 0;\n  }\n`\n\nconst FrontLayout = ({ children, data }) => {\n  return (\n    <FrontPage>\n      <MainHelmet metadata={data} />\n      <AcademyFrontHeader data={data} />\n      <main>{children}</main>\n      <AcademyFooter />\n    </FrontPage>\n  )\n}\n\nexport default FrontLayout\n","import React from \"react\"\nimport css from \"./Icon.module.scss\"\n\nconst Icon = ({ name, style }) => {\n  return (\n    <span alt={name} title={name} style={style} className={css.iconStyle}>\n      {name}\n    </span>\n  )\n}\n\nexport default Icon\n","import React from \"react\"\nimport Icon from \"../Icon\"\nimport colors from \"../../utils/colors\"\nimport moment from \"moment\"\nimport \"moment/locale/nb\"\nimport css from \"./InfoHeader.module.scss\"\n\n/**\n * Takes two strings with something that can be parsed to a date as input.\n * Returns a formatted string for use in the header.\n *\n * @param {*} from\n * @param {*} to\n */\nconst dateString = (from, to, confirmed = false) => {\n  const startDate = moment(from)\n  const endDate = moment(to)\n\n  if (moment(startDate).isValid === false) {\n    return \"TBD\"\n  }\n\n  if (confirmed === false) {\n    return `${startDate.format(\"D MMM\")} (ubekreftet)`\n  }\n\n  let string = startDate.format(\"D MMM\")\n  if (endDate.isValid()) {\n    string += ` - ${endDate.format(\"D MMM\")}`\n  }\n  string += ` ${startDate.format(\"YYYY\")}`\n\n  return string\n}\n\n/**\n * Returns the date field in the info header.\n *\n * @param {*} param0\n */\nconst Dates = ({ startDate, endDate, confirmed }) => {\n  const style = confirmed\n    ? { color: colors.knowit.green[0] }\n    : { color: colors.knowit.red[0] }\n\n  return (\n    <div>\n      <Icon style={style} name=\"date_range\" />\n      <span style={style} className={css.labels}>\n        {dateString(startDate, endDate, confirmed)}\n      </span>\n    </div>\n  )\n}\n\nconst Teacher = ({ name }) => {\n  return (\n    <div>\n      <Icon name=\"face\" />\n      <span className={css.labels}>{name}</span>\n    </div>\n  )\n}\n\nconst Byline = ({ author, email }) => {\n  if (!email) {\n    email = \"academy.knowit.no\"\n  }\n\n  return (\n    <>\n      av <a href={`mailto:${email}`}>{author}</a>\n    </>\n  )\n}\n\nconst Updated = ({ date, path, author, email }) => {\n  let byline = !path.match(/\\/courses/) ? (\n    <Byline author={author} email={email} />\n  ) : (\n    \"\"\n  )\n  return (\n    <div>\n      <Icon name=\"access_time\" />\n      <span className={css.labels}>\n        Oppdatert {moment(date).format(\"LL\")} {byline}\n      </span>\n    </div>\n  )\n}\n\nconst Picture = ({ url }) => {\n  // <img src={url} alt={`Lecturer is ${teacher}`} className={css.picture} />\n  return (\n    <div\n      className={css.pictureWrapper}\n      style={{\n        backgroundImage: `url(${url})`,\n        backgroundClip: \"padding-box\",\n        backgroundPosition: \"50% 30%\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    ></div>\n  )\n}\n\n/**\n * Displays a header with the title and metadata about the workshop\n * @param {*} param0\n */\nconst InfoHeader = ({ data }) => {\n  const { frontmatter } = data\n  const confirmed = frontmatter.confirmed ? true : false\n\n  let dates = frontmatter.path.match(/\\/courses/) ? (\n    <Dates\n      confirmed={confirmed}\n      startDate={frontmatter.date}\n      endDate={frontmatter.endDate}\n    />\n  ) : (\n    \"\"\n  )\n\n  let teacher = frontmatter.path.match(/\\/courses/) ? (\n    <Teacher name={frontmatter.teacher} />\n  ) : (\n    \"\"\n  )\n\n  let picture = frontmatter.path.match(/\\/courses/) ? (\n    <Picture url={frontmatter.image} teacher={frontmatter.teacher} />\n  ) : (\n    \"\"\n  )\n\n  return (\n    <div className={css.infoHeader}>\n      <div className={css.infoBox}>\n        <h1>{frontmatter.title}</h1>\n        <div className={css.byline}>\n          {dates}\n          {teacher}\n          <Updated\n            date={frontmatter.updated}\n            path={frontmatter.path}\n            author={frontmatter.author}\n            email={frontmatter.email}\n          />\n        </div>\n      </div>\n      {picture}\n    </div>\n  )\n}\n\nexport default InfoHeader\n"],"sourceRoot":""}